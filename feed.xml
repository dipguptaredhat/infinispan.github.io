<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://infinispan.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://infinispan.org/" rel="alternate" type="text/html" /><updated>2021-06-29T10:56:14-04:00</updated><id>https://infinispan.org/feed.xml</id><title type="html">Infinispan</title><subtitle>Infinispan is a distributed in-memory key/value data store with optional schema, available under the Apache License 2.0.</subtitle><entry><title type="html">An Infinispan .Net Core client over the Hot Rod protocol</title><link href="https://infinispan.org/blog/2021/06/21/infinispan-dotnet-core-client" rel="alternate" type="text/html" title="An Infinispan .Net Core client over the Hot Rod protocol" /><published>2021-06-21T08:00:00-04:00</published><updated>2021-06-21T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/06/21/dotnet-core-client</id><content type="html" xml:base="https://infinispan.org/blog/2021/06/21/infinispan-dotnet-core-client">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispanners,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan team would like to share a new project we&amp;#8217;re working on: &lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core&quot;&gt;Infinispan.Hotrod.Core&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our current .NET client is based on the C&amp;#43;&amp;#43; core implementation, which is a solution that has its pros and cons.
It makes it easier to guarantee parity between the C&amp;#43;&amp;#43; and C# clients over the time, but has the drawback of tying clients to specific a architecture.
In turn that complicates portability and distribution, making the release lifecycle for those clients more onerous and sluggish.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core&quot;&gt;Infinispan.Hotrod.Core&lt;/a&gt; is a 100% C# Hot Rod client designed with the aim of being portable across
systems via the .Net Core platform and easier to deploy and consume via the Nuget platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are involved with the .NET Core ecosystem we hope you will find this project of interest. Entry points for the project are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core&quot;&gt;Infinispan.Hotrod.Core&lt;/a&gt;, current status and news;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core/tree/main/Infinispan.Hotrod.Core.XUnitTest&quot;&gt;XUnit test&lt;/a&gt;, this will contain the same testsuite of the
current &lt;a href=&quot;https://github.com/infinispan/dotnet-client&quot;&gt;.NET client&lt;/a&gt; project with the aim of making it easier to compare with the .NET core client as it matures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core/tree/main/Infinispan.Hotrod.Application&quot;&gt;Sample Application&lt;/a&gt;, an example of project which uses the client package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Infinispan.Hotrod.Core/&quot;&gt;Nuget&lt;/a&gt; is where the package is published.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hope this will makes C# developers happy!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please let us know your thoughts, a good place for them is the &lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core/issues&quot;&gt;issues&lt;/a&gt; page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan Team&lt;/p&gt;
&lt;/div&gt;</content><author><name>Vittorio Rigamonti</name></author><category term="hotrod" /><category term=".Net Core" /><category term="client" /><category term="C#" /><summary type="html">Dear Infinispanners,</summary></entry><entry><title type="html">Infinispan (Red Hat Data Grid) featured again in Red Hat Developers</title><link href="https://infinispan.org/blog/2021/06/08/infinispan-redhat-summit-quarkus" rel="alternate" type="text/html" title="Infinispan (Red Hat Data Grid) featured again in Red Hat Developers" /><published>2021-06-08T08:00:00-04:00</published><updated>2021-06-08T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/06/08/infinispan-redhat-summit-quarkus-part-two</id><content type="html" xml:base="https://infinispan.org/blog/2021/06/08/infinispan-redhat-summit-quarkus">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan Community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan team is pleased to share the follow up article published on the Red Hat Developer blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Part two of a two-part series of articles, this blog post focuses on how
the &lt;a href=&quot;https://infinispan.org/docs/infinispan-operator/master/operator.html&quot;&gt;Infinispan Operator&lt;/a&gt; was used to create
all the configuration and deployment descriptors for the online hybrid-cloud Battleship game that featured
at this year&amp;#8217;s Red Hat Summit Keynote.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;You can read the blog post &lt;a href=&quot;https://developers.redhat.com/articles/2021/06/08/create-and-manage-red-hat-data-grid-services-hybrid-cloud&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan Operator is available from the &lt;a href=&quot;https://operatorhub.io/operator/infinispan&quot;&gt;Operator Hub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy your reading!&lt;/p&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="redhat" /><category term="datagrid" /><category term="quarkus" /><category term="operator" /><summary type="html">Dear Infinispan Community,</summary></entry><entry><title type="html">Infinispan (Red Hat Data Grid) featured in Red Hat Developers</title><link href="https://infinispan.org/blog/2021/05/31/infinispan-redhat-summit-quarkus" rel="alternate" type="text/html" title="Infinispan (Red Hat Data Grid) featured in Red Hat Developers" /><published>2021-05-31T08:00:00-04:00</published><updated>2021-05-31T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/05/31/infinispan-redhat-summit-quarkus</id><content type="html" xml:base="https://infinispan.org/blog/2021/05/31/infinispan-redhat-summit-quarkus">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan Community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan team is pleased to share an article published over on the Red Hat Developer blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Part one of a two-part series of articles, this blog post focuses on how Data Grid, which is built on Infinispan,
was used to create a leaderboard for an online Battleship game that featured at this year&amp;#8217;s Red Hat Summit Keynote.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;You can read the blog post &lt;a href=&quot;https://developers.redhat.com/articles/2021/05/28/building-real-time-leaderboard-red-hat-data-grid-and-quarkus-hybrid-kubernetes&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Technologies featured in our keynote demo:
* Quarkus and Infinispan Client Extension
* Additional Quarkus extensions: RestEasy, Websockets, Scheduler
* Infinispan Query
* Infinispan Cross-Site Replication
* Infinispan Kubernetes Operator&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy your reading!&lt;/p&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="redhat" /><category term="datagrid" /><category term="quarkus" /><category term="cross-site-replication" /><summary type="html">Dear Infinispan Community,</summary></entry><entry><title type="html">Infinispan Native CLI</title><link href="https://infinispan.org/blog/2021/05/21/infinispan-cli-image" rel="alternate" type="text/html" title="Infinispan Native CLI" /><published>2021-05-21T08:00:00-04:00</published><updated>2021-05-21T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/05/21/infinispan-cli-image</id><content type="html" xml:base="https://infinispan.org/blog/2021/05/21/infinispan-cli-image">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Starting with Infinispan 12, we provide a natively compiled version of the Infinispan CLI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This can be consumed as a native binary or via a container image.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Start a Infinispan server instance so that the CLI has an endpoint to connect to:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;docker run -it -p 11222:11222 -e USER=&quot;user&quot; -e PASS=&quot;pass&quot; quay.io/infinispan/server:12.1&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;container&quot;&gt;Container&lt;/h4&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot; start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;Launch the CLI image and connect to the server image:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;docker run --net=host -it --rm quay.io/infinispan/cli:12.1 -c http://127.0.0.1:11222&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot; start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;Enter the &quot;user&quot; and &quot;pass&quot; credentials, for the username and password respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The container&amp;#8217;s endpoint is the CLI binary, which lets you pass CLI arguments straight to the image, e.g. &lt;code&gt;quay.io/infinispan/cli:12.1 --version&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;binary&quot;&gt;Binary&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Native CLI binaries for Linux, Mac and Windows can be downloaded &lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/tag/12.1.3.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot; start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;Download and extract the &lt;code&gt;.zip&lt;/code&gt; for your desired platform:&lt;/p&gt;
&lt;div class=&quot;olist loweralpha&quot;&gt;
&lt;ol class=&quot;loweralpha&quot; type=&quot;a&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/download/12.1.3.Final/infinispan-cli-12.1.3.Final-linux-amd64.zip&quot;&gt;Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/download/12.1.3.Final/infinispan-cli-12.1.3.Final-darwin-amd64.zip&quot;&gt;Mac&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/download/12.1.3.Final/infinispan-cli-12.1.3.Final-windows-amd64.zip&quot;&gt;Windows&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the CLI and connect to the server container:&lt;/p&gt;
&lt;div class=&quot;olist loweralpha&quot;&gt;
&lt;ol class=&quot;loweralpha&quot; type=&quot;a&quot;&gt;
&lt;li&gt;
&lt;p&gt;Linux &amp;amp; Mac: &lt;code&gt;./ispn-cli -c &lt;a href=&quot;http://127.0.0.1:11222&quot; class=&quot;bare&quot;&gt;http://127.0.0.1:11222&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows (Powershell): &lt;code&gt;&amp;amp; &quot;.\ispn-cli.exe&quot; -c &lt;a href=&quot;http://127.0.0.1:11222&quot; class=&quot;bare&quot;&gt;http://127.0.0.1:11222&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ryan Emerson</name></author><category term="docker" /><category term="cli" /><category term="containers" /><category term="quarkus" /><category term="native" /><summary type="html">Starting with Infinispan 12, we provide a natively compiled version of the Infinispan CLI.</summary></entry><entry><title type="html">Infinispan 12.1.2.Final</title><link href="https://infinispan.org/blog/2021/05/07/infinispan-12-1-2-final" rel="alternate" type="text/html" title="Infinispan 12.1.2.Final" /><published>2021-05-07T08:00:00-04:00</published><updated>2021-05-07T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/05/07/infinispan-12.1.2.Final</id><content type="html" xml:base="https://infinispan.org/blog/2021/05/07/infinispan-12-1-2-final">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s been a month since our first 12.1.0.Final release and we already released two additional minors with
some bug fixes and upgrades. The latest version is 12.1.2.Final.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Highlights of Infinispan 12.1.1 and 12.1.2 include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grafana Dashboards for the Operator &lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12702&quot;&gt;ISPN-12702&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performance regression fix &lt;a href=&quot;https://issues.redhat.com/browse/ISPN-13017&quot;&gt;ISPN-13017&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Index and Query statistics improved in the Infinispan Web Console &lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12458&quot;&gt;ISPN-12458&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Several component upgrades&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation enchancements&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find release notes for both versions at:
&lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12355542&quot;&gt;here&lt;/a&gt;
and
&lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12356461&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="release" /><summary type="html">Dear Infinispan community,</summary></entry><entry><title type="html">Infinispan 12.1.0.Final</title><link href="https://infinispan.org/blog/2021/04/07/infinispan-12-1-0-final" rel="alternate" type="text/html" title="Infinispan 12.1.0.Final" /><published>2021-04-07T08:00:00-04:00</published><updated>2021-04-07T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/04/07/infinispan-12.1.0.Final</id><content type="html" xml:base="https://infinispan.org/blog/2021/04/07/infinispan-12-1-0-final">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a belated surprise in your chocolate egg this year is a brand new final release.
Infinispan 12.1 &lt;a href=&quot;https://en.wikipedia.org/wiki/Taedonggang&quot;&gt;Taedonggang&lt;/a&gt; includes a bunch of new features and fixes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;out-of-the-box-authorization-in-the-server&quot;&gt;Out-of-the-box authorization in the server&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The biggest change is the fact that the server now enables authorization right from the start, including a set of predefined roles.
By default this only affects management ops and it can be easily disabled.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Head over to &lt;a href=&quot;https://infinispan.org/docs/stable/titles/server/server.html#authorization&quot; class=&quot;bare&quot;&gt;https://infinispan.org/docs/stable/titles/server/server.html#authorization&lt;/a&gt; for details on this feature and how to tune it to your own needs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Infinispan can now load configuration as YAML, as well as XML and JSON.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;soft-index-file-store&quot;&gt;Soft-Index File Store&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Soft-Index File Store (or SIFS for short) is one of our file-based stores, and it has received a number of improvements such as segmentation, non-blocking and requiring no additional threads.
Additionally, if you are lucky enough to have some persistent memory hardware, this file-store can support it via the very awesome &lt;a href=&quot;https://github.com/jhalliday/mashona&quot;&gt;Mashona library&lt;/a&gt;.
We hope to make this our default file-store in the future (replacing the Single File Store).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;server-protocol-management&quot;&gt;Server protocol management&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can now enable/disable protocol endpoints at runtime or use &lt;a href=&quot;https://infinispan.org/docs/stable/titles/server/server.html#endpoint_ipfilter&quot;&gt;IP filtering&lt;/a&gt; for fine-grained access control.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;console&quot;&gt;Console&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The console is now fully aware of the server authorization roles (if enabled) and many fixes are included.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cli&quot;&gt;CLI&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The CLI is now available as &lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases&quot;&gt;native builds&lt;/a&gt; for Linux and MacOS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cross-site-replication&quot;&gt;Cross Site Replication&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can now enable automatic Cross Site &lt;a href=&quot;https://infinispan.org/docs/stable/titles/xsite/xsite.html#xsite_state_transfer-xsite&quot;&gt;state transfer&lt;/a&gt; for asynchronous backup strategy.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;spring&quot;&gt;Spring&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our Spring Cache and Spring Session integration now allows user keys and values to be stored in &lt;a href=&quot;https://infinispan.org/docs/stable/titles/developing/developing.html#configuring_protobuf_encoding-data&quot;&gt;Protostream&lt;/a&gt; format.
However, full integration with the Infinispan Spring Boot Starter is landing in the next minor release. Stay tuned!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;marshallingprotobuf&quot;&gt;Marshalling/ProtoBuf&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The latest ProtoStream release 4.4.0.Beta3 includes support for marshalling arrays and collections, built-in support for several community requested types (UUID, BigDEcimal,&amp;#8230;&amp;#8203;), a new method in ProtobufUtil for computing message size (without actually encoding the message) and a lot of bug fixes. This release also provides it’s own protobuf encoder and removes the dependency on protobuf-java artifact which was previously used for encoding the stream (without being exposed by the API).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We now provide an  image containing a natively compiled version of the Infinispan CLI at quay.io/infinispan/cli&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;operator&quot;&gt;Operator&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In addition to numerous fixes, the operator has added many new features. Most notably:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grafana Dashboard&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Batch CR&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom library support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom labels on Resources created by Operator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable Authentication Option&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decouple user and operator endpoint authentication&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’ve made a lot of updates to our documentation this release, with lots more task-oriented content for new features and capabilities. Server credential stores, refactored authorization (RBAC) configuration, Operator Batch CR, Backup and Restore CRs, custom code deployments, automatic cross-site state transfer, querying values, configuring Protobuf annotations for marshalling… Hopefully you’ll find all the answers you need for using Infinispan 12.1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of the big highlights for docs in this release are the new tabbed configuration snippets we’re going to start adding. Right now you can find an example of tabbed configuration in the REST API docs here: &lt;a href=&quot;https://infinispan.org/docs/dev/titles/rest/rest.html#cache_configuration&quot; class=&quot;bare&quot;&gt;https://infinispan.org/docs/dev/titles/rest/rest.html#cache_configuration&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’ve also done a lot of housekeeping in this release to make sure configuration examples are up to date and valid. In the next release you can expect to see more improvements there as well as a new title to improve our documentation around encoding and how Infinispan uses Protobuf.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As always, thanks for reading and get in touch if you have comments, feedback, or suggestions on our documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;release-notes-and-upgrading&quot;&gt;Release notes and upgrading&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can look at the detailed &lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12353337E&quot;&gt;release notes&lt;/a&gt; to see what has changed since CR1.
If you are upgrading from a previous version of Infinispan, please checkout our &lt;a href=&quot;https://infinispan.org/docs/stable/titles/upgrading/upgrading.html&quot;&gt;Upgrading guide&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What&amp;#8217;s next ?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our next release, 13.0, should happen during the summer, and will hopefully introduce a new API which will make using Infinispan much easier, as well as a number of other improvements across the board. As usual, look out for blog postings about upcoming highlights. If you&amp;#8217;d like to contribute, just get in touch.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Tristan Tarrant</name></author><category term="release" /><summary type="html">Dear Infinispan community,</summary></entry><entry><title type="html">Introducing WildFly Clustering Spring Session</title><link href="https://infinispan.org/blog/2021/03/16/new-infinispan-spring-session" rel="alternate" type="text/html" title="Introducing WildFly Clustering Spring Session" /><published>2021-03-16T08:00:00-04:00</published><updated>2021-03-16T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/03/16/wildfly-clustering-spring-session</id><content type="html" xml:base="https://infinispan.org/blog/2021/03/16/new-infinispan-spring-session">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last week I released version 3.0.0.Final of wildfly-clustering-spring-session, a new Spring Session implementation based on WildFly&amp;#8217;s distributed HttpSession manager and Infinispan.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;doesnt-infinispan-already-provide-a-spring-session-implementation&quot;&gt;Doesn&amp;#8217;t Infinispan already provide a Spring Session implementation?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://infinispan.org/docs/stable/titles/integrating/integrating.html#spring_externalize_sessions&quot;&gt;Yes, it does.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Infinispan&amp;#8217;s existing Spring Session implementation stores instances of &lt;code&gt;org.springframework.session.MapSession&lt;/code&gt; into a Spring cache, which is backed by either an embedded or remote cache.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, like many &lt;code&gt;MapSession&lt;/code&gt; based &lt;code&gt;SessionRepository&lt;/code&gt; implementations, it suffers from a common set of problems/limitations:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;MapSession&lt;/code&gt; object, including all session metadata and attributes must be serialized and replicated/persisted on every request, regardless of the extent to which the session was modified.&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Because Spring Session triggers session persistence from a &lt;code&gt;ServletFilter&lt;/code&gt;, this cost is borne per request.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since each request for a given session operates on a copy of the &lt;code&gt;MapSession&lt;/code&gt;, and since the &lt;code&gt;MapSession&lt;/code&gt; is not persisted/replicated until the end of the request:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Session modifications in one requests are not visible to concurrent requests for the same session.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A given session modification can be overwritten by a previous modification of the same session from a concurrent request if that request finishes first.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Session attributes implementing &lt;code&gt;HttpSessionActivationListener&lt;/code&gt; are never notified before/after they are marshalled/unmarshalled.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;wildfly-clustering-spring-session is implemented as a Spring &lt;code&gt;SessionRepository&lt;/code&gt; facade to a container-independent &lt;code&gt;SessionManager&lt;/code&gt; implementation that persists session attributes and metadata to either an embedded Infinispan cache or a remote Infinispan server cluster via HotRod.
This grants all of the features to Spring Session that one would normally expect when deploying a distributed web application to WildFly, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Minimal persistence payloads using configurable persistence granularity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consistent view of a given session from multiple concurrent request threads on a given server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mutable session attribute semantics (emulates the semantics of local session manager)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ability to treat specific session attributes as immutable&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configurable limit for the number of active sessions to retain in memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Proper &lt;code&gt;HttpSessionActivationListener&lt;/code&gt; notifications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configurable session attribute marshaller (ProtoStream, JBoss Marshalling, or Java Serialization)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-do-i-use-it&quot;&gt;How do I use it?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this example, we&amp;#8217;ll use a remote Infinispan cluster containing a single member, deployed to the localhost, using its default configuration.
See the project &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session/blob/master/README.md&quot;&gt;README&lt;/a&gt; for details on the available configuration annotations and their attributes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Create a class containing the session repository configuration, for example:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@org.wildfly.clustering.web.spring.hotrod.annotation.EnableHotRodHttpSession \
(@HotRod(uri = &quot;hotrod://127.0.0.1:11222&quot;), manager = @SessionManager(granularity = ATTRIBUTE))
public class Config {
  // ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure your &lt;code&gt;/WEB-INF/applicationContext.xml&lt;/code&gt; will process your configuration annotation:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd&quot;&amp;gt;
  &amp;lt;context:annotation-config/&amp;gt;
&amp;lt;/beans&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an application initializer class that will auto-register the requisite servlet filters required by Spring Session:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;public class MyHttpSessionApplicationInitializer extends AbstractHttpSessionApplicationInitializer {
  public MyHttpSessionApplicationInitializer() {
    // Do not call super constructor (see project README for details)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;code&gt;@WebListener&lt;/code&gt; that bootstraps our session repository configuration:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@javax.servlet.annotation.WebListener
public class MyContextLoaderListener extends org.wildfly.clustering.web.spring.context.ContextLoaderListener {
  public MyContextLoaderListener() {
    super(Config.class);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Deploying your application will automatically create a new cache instance in the Infinispan cluster named according to the the host and context of the web application.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;can-i-use-wildfly-clustering-spring-session-outside-of-wildfly&quot;&gt;Can I use WildFly clustering Spring Session outside of WildFly?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Of course!
Like most Spring Session repository implementations, it is meant to work with any implementation of the Jakarta Servlet 4.0 specification.
The project &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session&quot;&gt;README&lt;/a&gt; contains sample instructions for installing on Tomcat.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;where-can-i-find-it&quot;&gt;Where can I find it?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find the source code on &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session&quot;&gt;github&lt;/a&gt;.
Contributions are always welcome!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;File any issues with the &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session/issues&quot;&gt;github issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Checkout the &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session/blob/master/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Paul Ferraro&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Paul Ferraro</name></author><category term="spring" /><category term="spring session" /><category term="httpsession" /><category term="wildfly" /><summary type="html">Dear Infinispan community,</summary></entry><entry><title type="html">Infinispan 12.0.1.Final “Lockdown”</title><link href="https://infinispan.org/blog/2021/02/12/infinispan-12-0-1" rel="alternate" type="text/html" title="Infinispan 12.0.1.Final “Lockdown”" /><published>2021-02-12T07:00:00-05:00</published><updated>2021-02-12T07:00:00-05:00</updated><id>https://infinispan.org/blog/2021/02/12/infinispan-12.0.1.Final</id><content type="html" xml:base="https://infinispan.org/blog/2021/02/12/infinispan-12-0-1">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;we hope you&amp;#8217;ve been enjoying all the new goodies included in our latest major release, Infinispan 12.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We now have a brand new micro release for you which addresses a number of issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following list shows what we have fixed:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;component-upgrade&quot;&gt;Component Upgrade&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12729&quot;&gt;ISPN-12729&lt;/a&gt; - Upgrade console to 0.13.1.Final&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;enhancement&quot;&gt;Enhancement&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12370&quot;&gt;ISPN-12370&lt;/a&gt; - Implement proper form login and digest login&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12636&quot;&gt;ISPN-12636&lt;/a&gt; - Implicit connectors for the single-port endpoint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12718&quot;&gt;ISPN-12718&lt;/a&gt; - Add addtional DEBUG logs to Backup/Restore operations&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;feature-request&quot;&gt;Feature Request&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12660&quot;&gt;ISPN-12660&lt;/a&gt; - Add property to disable test execution&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;bug&quot;&gt;Bug&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12548&quot;&gt;ISPN-12548&lt;/a&gt; - Replicated cache get ignores value in zero-capacity nodes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12651&quot;&gt;ISPN-12651&lt;/a&gt; - CacheEntryCloudEventsTest test failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12654&quot;&gt;ISPN-12654&lt;/a&gt; - Get entry broken in protobuf caches&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12658&quot;&gt;ISPN-12658&lt;/a&gt; - Fix IracWriteSkewTest test&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12659&quot;&gt;ISPN-12659&lt;/a&gt; - StatsTest random failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12661&quot;&gt;ISPN-12661&lt;/a&gt; - Licenses are not properly generated in console&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12662&quot;&gt;ISPN-12662&lt;/a&gt; - Functional commands break in replicated caches on zero-capacity nodes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12663&quot;&gt;ISPN-12663&lt;/a&gt; - LocalIndexSyncStateTransferTest random failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12666&quot;&gt;ISPN-12666&lt;/a&gt; - ReplicationIndexTest random failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12667&quot;&gt;ISPN-12667&lt;/a&gt; - GlobalState incompatibility between 11.x and 12.x&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12669&quot;&gt;ISPN-12669&lt;/a&gt; - Tests failing due to relying on published images&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12700&quot;&gt;ISPN-12700&lt;/a&gt; - CLI Batch files returns exit code 0 on error&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12709&quot;&gt;ISPN-12709&lt;/a&gt; - Cannot retrieve the keyset of a cache (ISPN000287)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12710&quot;&gt;ISPN-12710&lt;/a&gt; - IllegalArgumentException in VoidResponseCollector: Self-suppression not permitted&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12716&quot;&gt;ISPN-12716&lt;/a&gt; - Hot Rod iteration shouldn&amp;#8217;t require ADMIN permission&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12719&quot;&gt;ISPN-12719&lt;/a&gt; - When a value is json but not protobuf the console fails&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12724&quot;&gt;ISPN-12724&lt;/a&gt; - Hot Rod client has too many Elytron dependencies&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;task&quot;&gt;Task&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12681&quot;&gt;ISPN-12681&lt;/a&gt; - Upgrade logo in Operator Hub&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ryan Emerson</name></author><category term="release" /><summary type="html">Dear Infinispan community,</summary></entry><entry><title type="html">Infinispan 12.0.0.Final</title><link href="https://infinispan.org/blog/2021/01/25/infinispan-12-final" rel="alternate" type="text/html" title="Infinispan 12.0.0.Final" /><published>2021-01-25T07:00:00-05:00</published><updated>2021-01-25T07:00:00-05:00</updated><id>https://infinispan.org/blog/2021/01/25/infinispan-12.0.0.Final</id><content type="html" xml:base="https://infinispan.org/blog/2021/01/25/infinispan-12-final">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;infinispan-12-0-0-final&quot;&gt;Infinispan 12.0.0.Final&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;we hope you, your families and colleagues are doing well in these trying times.
We&amp;#8217;ve been working hard over the last few months to bring you a brand-new release of Infinispan. Infinispan 12, aptly codenamed &lt;a href=&quot;https://kildarebrewing.ie/Lockdown-IPA-2-0-5-7-12-Pack-p191649230&quot;&gt;Lockdown&lt;/a&gt; comes loaded with a number of notable features as well as the usual slew of fixes and cleanups.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;indexing-and-search&quot;&gt;Indexing and Search&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our good friends over at &lt;a href=&quot;http://hibernate.org/search/&quot;&gt;Hibernate Search&lt;/a&gt; have been working hard on delivering an awesome
&lt;a href=&quot;https://in.relation.to/2020/12/11/hibernate-search-6-0-0-Final/&quot;&gt;new release&lt;/a&gt; and have also helped us integrate it in Infinispan. This is not
just an upgrade: we have taken the opportunity to evolve our indexing configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Upgraded to Hibernate Search 6, that brings support for Lucene 8 indexes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Better indexing performance out of the box&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New statistics API, covering indexed, non-indexed and hybrid queries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introduced strong typed indexing configuration that replaces the string key/value properties.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Head over to the much improved &lt;a href=&quot;https://infinispan.org/docs/stable/titles/developing/developing.html#search_api&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We introduced a couple of improvements to the configuration API:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Runtime creation of templates: the remote APIs now allow creating configuration templates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration Fragments: when creating caches and templates via the remote APIs, you no longer need to wrap their configuration in the
&lt;code&gt;&amp;lt;infinispan&amp;gt;&amp;lt;cache-container&amp;gt;&amp;#8230;&amp;#8203;&amp;lt;/cache-container&amp;gt;&amp;lt;/infinispan&amp;gt;&lt;/code&gt; elements, but you can simply use the cache definition directly, e.g.:
&lt;code&gt;&amp;lt;distributed-cache name=”mycache”/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;marshalling&quot;&gt;Marshalling&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new &lt;code&gt;@ProtoAdapter&lt;/code&gt; annotation has been added to ProtoStream for generating &lt;code&gt;.proto&lt;/code&gt; files and marshallers for third party classes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SerializationContextInitializer&lt;/code&gt; implementations are automatically discovered and configured via Java ServiceLoader.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User types are now fully isolated from Infinispan internal context.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;cross-site-replication&quot;&gt;Cross Site Replication&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our work on improving asynchronous cross-site replication continues with the following improvements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a new SPI for merging conflicting values: if two (or more) write operations happen simultaneously in different sites, the conflict is detected and the SPI is invoked to merge the values. Merge policies determine which action will be taken in case of conflict between updates of different sites. Some predefined merge policies can be found
&lt;a href=&quot;https://docs.jboss.org/infinispan/12.0/apidocs/org/infinispan/xsite/spi/XSiteMergePolicy.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exponential back-off added for network failures: ff the network between the sites disconnects, Infinispan will retry less frequently before giving up. It helps reduce the CPU utilization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatic disconnection if the cache configuration does not exist or is incorrect: if Infinispan tries to backup to a remote site and the remote site doesn’t have the cache defined, the remote site is automatically taken offline.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Internal code improvements: the code is now non-blocking to reduce the CPU usage.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See &lt;a href=&quot;https://infinispan.org/docs/stable/titles/xsite/xsite.html&quot;&gt;cross-site replication documentation&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;server&quot;&gt;Server&lt;/h3&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;backuprestore&quot;&gt;Backup/Restore&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A backup archive, that contains container resources (caches, cache templates, counters, Protobuf schemas, server tasks)  currently stored in the cache manager, can now be created. The backup archive can then be used to restore Infinispan clusters content after a restart or migration. This feature is exposed via the REST endpoint, however backups can also be created via the Infinispan CLI or with Backup/Restore CRs when using the operator.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;credential-stores&quot;&gt;Credential Stores&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To protect sensitive text strings, such as passwords, in the server configuration, you can add them to a credential keystore and reference them. You can then configure the server to decrypt passwords for establishing connections with services such as databases or LDAP directories.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;security&amp;gt;
   &amp;lt;credential-stores&amp;gt;
      &amp;lt;credential-store name=&quot;credentials&quot; path=&quot;credentials.pfx&quot;&amp;gt;
         &amp;lt;clear-text-credential clear-text=&quot;secret&quot;/&amp;gt;
      &amp;lt;/credential-store&amp;gt;
   &amp;lt;/credential-stores&amp;gt;
&amp;lt;/security&amp;gt;
&amp;lt;data-sources&amp;gt;
   &amp;lt;data-source name=&quot;postgres&quot; jndi-name=&quot;jdbc/postgres&quot;&amp;gt;
      &amp;lt;connection-factory driver=&quot;org.postgresql.Driver&quot;
                      username=&quot;dbuser&quot;
                      url=&quot;jdbc:postgresql:database&quot;&amp;gt;
  &amp;lt;credential-reference store=&quot;credentials&quot; alias=&quot;dbpassword&quot;/&amp;gt;
      &amp;lt;/connection-factory&amp;gt;
   &amp;lt;/data-source&amp;gt;
&amp;lt;/data-sources&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;multiple-endpoints&quot;&gt;Multiple endpoints&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The server now allows definining multiple single-port endpoints, each one mapped to a separate socket binding and with its own security realm. This is useful if you want to expose an admin endpoint on an internal, management-only network as well as an endpoint for application uses.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;optional-authentication-for-metrics-endpoint&quot;&gt;Optional authentication for metrics endpoint&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Previously, the Prometheus-compatible metrics endpoint, published at &lt;a href=&quot;http://infinispan:11222/metrics&quot; class=&quot;bare&quot;&gt;http://infinispan:11222/metrics&lt;/a&gt;, used the same security semantics as the single port endpoint. It&amp;#8217;s now possible to allow anonymous connections to this endpoint, to simplify integration with your Prometheus scraper.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;custom-server-paths&quot;&gt;Custom server paths&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It’s now possible to start the server by overriding each of the paths individually.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;server.sh -Dinfinispan.server.config.path=... \
          -Dinfinispan.server.log.path=... \
          -Dinfinispan.server.data.path=... \
          -Dinfinispan.server.lib.path=...&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Moreover, the server library path now supports multiple directories which will be scanned recursively for both JARs and bare resources such as property files.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;near-caches-with-bloom-filter&quot;&gt;Near caches with bloom filter&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The remote client has near caches that allow for values retrieved from the remote server to be cached locally on the client. This works great for workloads that are primarily read only. However, to provide consistency we have to listen to remote modification/removal events from the server, which can make work loads with a lot of writes not scale. As such we are introducing bloom filter assisted notifications that will reduce the amount of modification/removal events received from the server and thus would increase the scalability of write heavy applications using the near cache. This needs to be enabled in addition to near caching, which can be done via the client configuration xml or programmatic classes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;distributed-tracing&quot;&gt;Distributed tracing&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can now integrate Infinispan&amp;#8217;s server with OpenTracing to perform distributed tracing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Only track Hot Rod cache write requests (i.e. no counters, multimap etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the OpenTracing implementation via the &lt;code&gt;infinispan.opentracing.factory.class&lt;/code&gt; and &lt;code&gt;infinispan.opentracing.factory.method&lt;/code&gt; system properties.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An OpenTracing implementation (is not included: instead it must be added to the server/lib directory (for example: the Jaeger OpenTracing implementation).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;cli&quot;&gt;CLI&lt;/h3&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;benchmark-tool&quot;&gt;Benchmark tool&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The CLI now includes a small convenience benchmark tool which allows you to measure latency and throughput of an Infinispan server using a specific configuration. You can use this when sizing resources based on your requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;native-build&quot;&gt;Native build&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The CLI is available as a native build, thanks to &lt;a href=&quot;https://quarkus.io/&quot;&gt;Quarkus&lt;/a&gt;. The binaries for Linux, Mac and Windows can be found &lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/tag/12.0.0.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;kubernetes-cli&quot;&gt;Kubernetes CLI&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When installing the native CLI as &lt;code&gt;kubectl-infinispan&lt;/code&gt;, the CLI gains additional functionality to control the Infinispan operator, simplifying many operations. This includes the ability to install and uninstall the operator, create and delete Infinispan clusters and obtain information about various resources.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;configuration-improvements&quot;&gt;Configuration improvements&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The CLI can persist some configuration properties which you wish to apply to all your sessions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;autoconnect-url&lt;/code&gt;: Specifies the URL to which the CLI automatically connects on startup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;autoexec&lt;/code&gt;: Specifies the path of a CLI batch file to execute on startup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;truststore&lt;/code&gt;: Specifies the path of a truststore to validate server certificates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;trustall&lt;/code&gt;: Specifies whether to trust all server certificates without supplying a trust store.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;console&quot;&gt;Console&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This version includes a new version of the web console, including mainly fixes, but also the ability to finally view cache entries and their
details:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/assets/images/blog/console12-0.png&quot;&gt;&lt;img src=&quot;/assets/images/blog/console12-0.png&quot; alt=&quot;Cache entries&quot; width=&quot;550&quot; height=&quot;367&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/assets/images/blog/console12-1.png&quot;&gt;&lt;img src=&quot;/assets/images/blog/console12-1.png&quot; alt=&quot;Key types&quot; width=&quot;512&quot; height=&quot;210&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/assets/images/blog/console12-2.png&quot;&gt;&lt;img src=&quot;/assets/images/blog/console12-2.png&quot; alt=&quot;Integer keys&quot; width=&quot;550&quot; height=&quot;226&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cloud-events-integration&quot;&gt;Cloud Events integration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan &lt;a href=&quot;https://cloudevents.io/&quot;&gt;CloudEvents&lt;/a&gt; integration is a new experimental module which converts Infinispan events to CloudEvents events and sends them to a Kafka topic in structured mode. This allows Infinispan be further used as a Knative source.
There are two broad kinds of events:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cache entry modifications: created, updated, removed, expired&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Audit events: user login, access denied&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;images&quot;&gt;Images&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A natively compiled version of the CLI is now available as a container via the &lt;a href=&quot;https://quay.io/repository/infinispan/cli&quot;&gt;infinispan/cli&lt;/a&gt; image.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The server images have also added support for configuring zero-capacity as well as allowing JGroups properties to be overridden at runtime.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;operator&quot;&gt;Operator&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The operator continues to improve and evolve so that installing and managing Infinispan clusters on Kubernetes/OpenShift is a breeze:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Data Backup and Restore are available via CR.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross site improvements:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Access to remote cluster k8s API is no longer mandatory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manual configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Namespaces can be different.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multinamespace and global installation mode.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TLS can be disabled via CR configuration, even in environments where certificate management is built-in (e.g. OpenShift).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for the Quarkus native Infinispan image.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Anti-affinity configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Documentation for configuring cluster transport was overhauled in Infinispan 12. We made numerous changes, based on direct feedback from the community, to our JGroups content. We also added details on how to configure SYM_ENCRYPT and ASYM_ENCRYPT protocols, which were previously available only in the JGroups documentation set.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can find new chapters on Configuring Cluster Transport in the Server Guide and Embedding Infinispan Guide. The details for JGroups encryption are also available in the guide for Securing Infinispan.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Off-Heap configuration has often been misunderstood and we’ve had several questions about what it actually means to store data in native memory outside the JVM heap. To address these questions, and spell out some of the benefits and potential downsides of using off-heap storage, we’ve added some conceptual information to our Configuration Guide.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our documentation on Configuring Infinispan to Marshall Java Objects is also updated in an effort to improve clarity and be more task-oriented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Along with all the refactoring and improvements that have been made to the Search API, we’ve made some improvements to our documentation for Querying Values in Infinispan Caches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lastly, we noticed that the documentation for Clustered Locks was a little out of date and potentially confusing so we spent time to rework that content to make sure it’s accurate.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As always, the Infinispan team hope you find the documentation useful and complete. We’d love to hear from you and
really value feedback from our community. If you think something is missing from the docs or spot a correction,
please get in touch and we’ll get on it straight away.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;other&quot;&gt;Other&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We have decided to adopt &lt;a href=&quot;https://github.com/conscious-lang/conscious-lang-docs&quot;&gt;Conscious language&lt;/a&gt; in Infinispan, both in our code and in our documentation. For example, Infinispan&amp;#8217;s way of configuring which classes are allowed to be marshalled/unmarshalled is now called &lt;em&gt;allow list&lt;/em&gt;. If you find other places where we are using inappropriate terms, please don&amp;#8217;t hesitate to contact us.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We’ve added some UI writing guidelines and Infinispan terminology to our Contributor’s Guide in an effort to create a consistent user experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As you may have noticed, our website has gone through some extensive redesign.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bye bye OSGI (it even rhymes !): we&amp;#8217;ve removed support for OSGi since it was quite a maintenance burden.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;release-notes-and-upgrading&quot;&gt;Release notes and upgrading&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can look at the detailed &lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12345018&quot;&gt;release notes&lt;/a&gt; to see what has changed since CR1.
If you are upgrading from a previous version of Infinispan, please checkout our &lt;a href=&quot;https://infinispan.org/docs/stable/titles/upgrading/upgrading.html&quot;&gt;Upgrading guide&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What&amp;#8217;s next ?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our next release, 12.1, will be a quick one, mostly focused on polishing and small API improvemnets, before we move on to bigger things. As usual, look out for blog postings about upcoming highlights. If you&amp;#8217;d like to contribute, just get in touch.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Tristan Tarrant</name></author><category term="release" /><summary type="html">Infinispan 12.0.0.Final</summary></entry><entry><title type="html">Infinispan 12.0.0.Dev03</title><link href="https://infinispan.org/blog/2020/09/08/infinispan-12" rel="alternate" type="text/html" title="Infinispan 12.0.0.Dev03" /><published>2020-09-08T08:00:00-04:00</published><updated>2020-09-08T08:00:00-04:00</updated><id>https://infinispan.org/blog/2020/09/08/infinispan-12.0.0.Dev03</id><content type="html" xml:base="https://infinispan.org/blog/2020/09/08/infinispan-12">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Infinispan 12 development release 03 is here!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cross-site-replication&quot;&gt;Cross Site Replication&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With the new asynchronous cross-site replication algorithm introduced in Infinispan 11, this release brings
a long desired feature: &lt;strong&gt;conflict resolution&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is possible to configure a merge policy where, in case of conflict between updates of different sites, the value
can be merged. Some predefined merge policies can be found
&lt;a href=&quot;https://docs.jboss.org/infinispan/12.0/apidocs/org/infinispan/xsite/spi/XSiteMergePolicy.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See the docs for more &lt;a href=&quot;https://infinispan.org/docs/dev/titles/xsite/xsite.html#conflict_resolution-xsite&quot;&gt;information about conflict resolution&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Performance improvement&lt;/div&gt;
&lt;p&gt;Another small improvement has been made to cross-site replication in this release.
When sites get requests targeting caches that don&amp;#8217;t exist or aren&amp;#8217;t started,
sender sites stop retrying the requests, which takes the backup location offline.
Administrators must then bring the sites back online and perform state transfer to sync possible
out-of-date data.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;infinispan-server&quot;&gt;Infinispan Server&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This version includes a new version of the web console, including mainly fixes, but also the ability to filter
between Strong and Weak counters and to remove counters from the list.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/assets/images/blog/ispnDev03console1.png&quot;&gt;&lt;img src=&quot;/assets/images/blog/ispnDev03console1.png&quot; alt=&quot;Console Counters Filter&quot; width=&quot;550&quot; height=&quot;400&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/assets/images/blog/ispnDev03console2.png&quot;&gt;&lt;img src=&quot;/assets/images/blog/ispnDev03console2.png&quot; alt=&quot;Console Counters Remove Button&quot; width=&quot;550&quot; height=&quot;400&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/assets/images/blog/ispnDev03console3.png&quot;&gt;&lt;img src=&quot;/assets/images/blog/ispnDev03console3.png&quot; alt=&quot;Console Counters Remove Modal&quot; width=&quot;550&quot; height=&quot;400&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can look at the &lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12347011&quot;&gt;release notes&lt;/a&gt; to see what has changed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://infinispan.org/docs/dev/index.html&quot;&gt;Our documentation has been updated&lt;/a&gt; with some additional content as well as improvements for clarity and
technical accuracy, notably:
* Infinispan Operator Guide
* Server Guide
* Guide to Cross-Site Replication
* Security Guide&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As always, the Infinispan team hope you find the documentation useful and complete. We’d love to hear from you and
really value feedback from our community. If you think something is missing from the docs or spot a correction,
please get in touch and we’ll get on it straight away.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;release-notes&quot;&gt;Release notes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can look at the &lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12347011&quot;&gt;release notes&lt;/a&gt; to see what has changed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="release" /><category term="development" /><summary type="html">Dear Infinispan community,</summary></entry></feed>