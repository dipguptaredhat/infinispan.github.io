<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://infinispan.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://infinispan.org/" rel="alternate" type="text/html" /><updated>2021-10-04T05:54:47-04:00</updated><id>https://infinispan.org/feed.xml</id><title type="html">Infinispan</title><subtitle>Infinispan is a distributed in-memory key/value data store with optional schema, available under the Apache License 2.0.</subtitle><entry><title type="html">Infinispan 13.0.0.CR1</title><link href="https://infinispan.org/blog/2021/09/23/infinispan-13-cr1" rel="alternate" type="text/html" title="Infinispan 13.0.0.CR1" /><published>2021-09-23T08:00:00-04:00</published><updated>2021-09-23T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/09/23/infinispan-13.0.0.CR1</id><content type="html" xml:base="https://infinispan.org/blog/2021/09/23/infinispan-13-cr1">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ve just released 13.0.0.CR1 which brings you several new features along with a number of enhancements and bug fixes.
Here is a non-exhaustive list of Infinispan 13 has in store:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;mutable-cache-configuration&quot;&gt;Mutable cache configuration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can now update cache configuration at runtime with the CLI.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;improved-cluster-upgrades&quot;&gt;Improved cluster upgrades&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ve done quite a lot of work on rolling upgrade operations in Infinispan 13, making the process smoother from the REST API, CLI, and with our Kubernetes Operator.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;re-balancing-operations&quot;&gt;Re-balancing operations&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Control cluster topology re-balancing from the REST API, CLI, and Console.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;persistent-storage-improvements&quot;&gt;Persistent storage improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;File-based caches stores now default to SoftIndexFileStore.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We&amp;#8217;ve added a new SQL cache store.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cross-site-replication&quot;&gt;Cross-site replication&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For global Infinispan clusters, this release brings a number of improvements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cross-site replication operations from the Console.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Additional statistics for increased observability.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Better logging details for cross-site cluster views.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;simplified-server-cluster-security&quot;&gt;Simplified server cluster security&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Infinispan Server can automatically enable SSL for the cluster transport.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;queries&quot;&gt;Queries&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added support for local query operations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;helm-charts&quot;&gt;Helm charts&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ve added an Infinispan Helm chart for deploying clusters to Kubernetes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation-and-tutorials&quot;&gt;Documentation and tutorials&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ve made a number of documentation improvements this release, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new guide for Hot Rod JS clients.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Better organization and documentation for Infinispan simple tutorials.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replaced the Integration Guide with a dedicated guide for Spring users as well as a guide for Hibernate caches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A brand new guide for Indexing and Querying.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overhauled and updated Configuration Guide.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Additional JSON and YAML configuration examples.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="release" /><summary type="html">Dear Infinispan community,</summary></entry><entry><title type="html">Infinispan Node.js client supports authentication</title><link href="https://infinispan.org/blog/2021/06/29/infinispan-js-client" rel="alternate" type="text/html" title="Infinispan Node.js client supports authentication" /><published>2021-06-29T08:00:00-04:00</published><updated>2021-06-29T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/06/29/js-client</id><content type="html" xml:base="https://infinispan.org/blog/2021/06/29/infinispan-js-client">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;node-js-client-0-9-0&quot;&gt;Node.js Client 0.9.0&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Infinispan Node.js client version 0.9.0 was released last week with added support for different SASL authentication mechanisms.
Up to now, our Node.js client could connect to Infinispan Server security realms with disabled authentication.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;digest-md5&quot;&gt;DIGEST-MD5&lt;/h5&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Uses the MD5 hashing algorithm in addition to nonces to encrypt credentials.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;scram&quot;&gt;SCRAM&lt;/h5&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Uses salt values in addition to hashing algorithms and nonce values to encrypt credentials. Hot Rod endpoints support SCRAM-SHA-1, SCRAM-SHA-256, SCRAM-SHA-384, SCRAM-SHA-512 hashing algorithms, in order of strength.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;external&quot;&gt;EXTERNAL&lt;/h5&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Uses client certificates to provide valid identities to Infinispan Server and enable encryption.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;oauthbearer&quot;&gt;OAUTHBEARER&lt;/h5&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Uses tokens obtained via an OAuth 2.0 provider to securely connect to Infinispan Server.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;plain&quot;&gt;PLAIN:&lt;/h5&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sends credentials in plain text (unencrypted) over the wire in a way that is similar to HTTP BASIC authentication.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Warning&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
To secure Infinispan credentials, you should use PLAIN authentication only in combination with TLS encryption.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;run-the-infinispan-server&quot;&gt;Run the Infinispan Server&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Run the Infinispan Server with Docker or Podman&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;docker run -it -p 11222:11222 -e USER=&quot;admin&quot; -e PASS=&quot;password&quot; quay.io/infinispan/server:12.1

podman run -it -p 11222:11222 -e USER=&quot;admin&quot; -e PASS=&quot;password&quot; --net=host quay.io/infinispan/server:12.1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock important&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Important&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
If you are using Docker for Mac, there is a known limitation. You will need to &lt;a href=&quot;https://infinispan.org/download/&quot;&gt;download
the server distribution&lt;/a&gt; and run the server manually.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Run the Infinispan Server from the file system&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./bin/cli.sh user create admin -p password
./bin/server.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;create-a-cache-from-infinispan-console&quot;&gt;Create a cache from Infinispan Console&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Access the Infinispan Console in &lt;a href=&quot;http://localhost:11222/&quot;&gt;http://localhost:11222/&lt;/a&gt; and create a text based
cache, named it 'my-cache' with the provided configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Connect to Infinispan&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
  &quot;distributed-cache&quot;: {
    &quot;mode&quot;: &quot;SYNC&quot;,
    &quot;encoding&quot;: {
      &quot;media-type&quot;: &quot;text/plain&quot;
    },
    &quot;statistics&quot;: true
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;use-the-node-js-client-in-your-application&quot;&gt;Use the Node.js client in your application&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Add the dependency to your project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;package.json&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&quot;dependencies&quot;: {
&quot;infinispan&quot;: &quot;^0.9.0&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Configure the Infinispan Node.js client to connect with authentication and then check the created cache entry from the console.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;application.js&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;var connected = infinispan.client({port: 11222, host: '127.0.0.1'},
{
    cacheName: 'my-cache',
    authentication: {
        enabled: true,
        saslMechanism: 'DIGEST-MD5',
        userName: 'admin',
        password: 'password'
    }
});

connected.then(function (client) {
    return client.put('key', 'value')
    .finally(function() {
    return client.disconnect();
  });
});&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;to-go-further&quot;&gt;To go further&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full client documentation is now available in the
&lt;a href=&quot;https://infinispan.org/docs/hotrod-clients/js/latest/js_client.html&quot;&gt;Hot Rod JS Client Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jira tracker for this client is available &lt;a href=&quot;https://issues.redhat.com/projects/HRJS&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="hotrod" /><category term="Node.js" /><category term="client" /><category term="javascript" /><category term="release" /><summary type="html">Node.js Client 0.9.0</summary></entry><entry><title type="html">An Infinispan .Net Core client over the Hot Rod protocol</title><link href="https://infinispan.org/blog/2021/06/21/infinispan-dotnet-core-client" rel="alternate" type="text/html" title="An Infinispan .Net Core client over the Hot Rod protocol" /><published>2021-06-21T08:00:00-04:00</published><updated>2021-06-21T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/06/21/dotnet-core-client</id><content type="html" xml:base="https://infinispan.org/blog/2021/06/21/infinispan-dotnet-core-client">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispanners,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan team would like to share a new project we&amp;#8217;re working on: &lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core&quot;&gt;Infinispan.Hotrod.Core&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our current .NET client is based on the C&amp;#43;&amp;#43; core implementation, which is a solution that has its pros and cons.
It makes it easier to guarantee parity between the C&amp;#43;&amp;#43; and C# clients over the time, but has the drawback of tying clients to specific a architecture.
In turn that complicates portability and distribution, making the release lifecycle for those clients more onerous and sluggish.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core&quot;&gt;Infinispan.Hotrod.Core&lt;/a&gt; is a 100% C# Hot Rod client designed with the aim of being portable across
systems via the .Net Core platform and easier to deploy and consume via the Nuget platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are involved with the .NET Core ecosystem we hope you will find this project of interest. Entry points for the project are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core&quot;&gt;Infinispan.Hotrod.Core&lt;/a&gt;, current status and news;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core/tree/main/Infinispan.Hotrod.Core.XUnitTest&quot;&gt;XUnit test&lt;/a&gt;, this will contain the same testsuite of the
current &lt;a href=&quot;https://github.com/infinispan/dotnet-client&quot;&gt;.NET client&lt;/a&gt; project with the aim of making it easier to compare with the .NET core client as it matures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core/tree/main/Infinispan.Hotrod.Application&quot;&gt;Sample Application&lt;/a&gt;, an example of project which uses the client package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Infinispan.Hotrod.Core/&quot;&gt;Nuget&lt;/a&gt; is where the package is published.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hope this will makes C# developers happy!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please let us know your thoughts, a good place for them is the &lt;a href=&quot;https://github.com/infinispan/Infinispan.Hotrod.Core/issues&quot;&gt;issues&lt;/a&gt; page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan Team&lt;/p&gt;
&lt;/div&gt;</content><author><name>Vittorio Rigamonti</name></author><category term="hotrod" /><category term=".Net Core" /><category term="client" /><category term="C#" /><summary type="html">Dear Infinispanners,</summary></entry><entry><title type="html">Infinispan (Red Hat Data Grid) featured again in Red Hat Developers</title><link href="https://infinispan.org/blog/2021/06/08/infinispan-redhat-summit-quarkus" rel="alternate" type="text/html" title="Infinispan (Red Hat Data Grid) featured again in Red Hat Developers" /><published>2021-06-08T08:00:00-04:00</published><updated>2021-06-08T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/06/08/infinispan-redhat-summit-quarkus-part-two</id><content type="html" xml:base="https://infinispan.org/blog/2021/06/08/infinispan-redhat-summit-quarkus">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan Community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan team is pleased to share the follow up article published on the Red Hat Developer blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Part two of a two-part series of articles, this blog post focuses on how
the &lt;a href=&quot;https://infinispan.org/docs/infinispan-operator/master/operator.html&quot;&gt;Infinispan Operator&lt;/a&gt; was used to create
all the configuration and deployment descriptors for the online hybrid-cloud Battleship game that featured
at this year&amp;#8217;s Red Hat Summit Keynote.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;You can read the blog post &lt;a href=&quot;https://developers.redhat.com/articles/2021/06/08/create-and-manage-red-hat-data-grid-services-hybrid-cloud&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan Operator is available from the &lt;a href=&quot;https://operatorhub.io/operator/infinispan&quot;&gt;Operator Hub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy your reading!&lt;/p&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="redhat" /><category term="datagrid" /><category term="quarkus" /><category term="operator" /><summary type="html">Dear Infinispan Community,</summary></entry><entry><title type="html">Infinispan (Red Hat Data Grid) featured in Red Hat Developers</title><link href="https://infinispan.org/blog/2021/05/31/infinispan-redhat-summit-quarkus" rel="alternate" type="text/html" title="Infinispan (Red Hat Data Grid) featured in Red Hat Developers" /><published>2021-05-31T08:00:00-04:00</published><updated>2021-05-31T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/05/31/infinispan-redhat-summit-quarkus</id><content type="html" xml:base="https://infinispan.org/blog/2021/05/31/infinispan-redhat-summit-quarkus">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan Community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Infinispan team is pleased to share an article published over on the Red Hat Developer blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Part one of a two-part series of articles, this blog post focuses on how Data Grid, which is built on Infinispan,
was used to create a leaderboard for an online Battleship game that featured at this year&amp;#8217;s Red Hat Summit Keynote.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;You can read the blog post &lt;a href=&quot;https://developers.redhat.com/articles/2021/05/28/building-real-time-leaderboard-red-hat-data-grid-and-quarkus-hybrid-kubernetes&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Technologies featured in our keynote demo:
* Quarkus and Infinispan Client Extension
* Additional Quarkus extensions: RestEasy, Websockets, Scheduler
* Infinispan Query
* Infinispan Cross-Site Replication
* Infinispan Kubernetes Operator&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy your reading!&lt;/p&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="redhat" /><category term="datagrid" /><category term="quarkus" /><category term="cross-site-replication" /><summary type="html">Dear Infinispan Community,</summary></entry><entry><title type="html">Infinispan Native CLI</title><link href="https://infinispan.org/blog/2021/05/21/infinispan-cli-image" rel="alternate" type="text/html" title="Infinispan Native CLI" /><published>2021-05-21T08:00:00-04:00</published><updated>2021-05-21T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/05/21/infinispan-cli-image</id><content type="html" xml:base="https://infinispan.org/blog/2021/05/21/infinispan-cli-image">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Starting with Infinispan 12, we provide a natively compiled version of the Infinispan CLI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This can be consumed as a native binary or via a container image.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Start a Infinispan server instance so that the CLI has an endpoint to connect to:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;docker run -it -p 11222:11222 -e USER=&quot;user&quot; -e PASS=&quot;pass&quot; quay.io/infinispan/server:12.1&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;container&quot;&gt;Container&lt;/h4&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot; start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;Launch the CLI image and connect to the server image:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;docker run --net=host -it --rm quay.io/infinispan/cli:12.1 -c http://127.0.0.1:11222&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot; start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;Enter the &quot;user&quot; and &quot;pass&quot; credentials, for the username and password respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The container&amp;#8217;s endpoint is the CLI binary, which lets you pass CLI arguments straight to the image, e.g. &lt;code&gt;quay.io/infinispan/cli:12.1 --version&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;binary&quot;&gt;Binary&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Native CLI binaries for Linux, Mac and Windows can be downloaded &lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/tag/12.1.3.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot; start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;Download and extract the &lt;code&gt;.zip&lt;/code&gt; for your desired platform:&lt;/p&gt;
&lt;div class=&quot;olist loweralpha&quot;&gt;
&lt;ol class=&quot;loweralpha&quot; type=&quot;a&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/download/12.1.3.Final/infinispan-cli-12.1.3.Final-linux-amd64.zip&quot;&gt;Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/download/12.1.3.Final/infinispan-cli-12.1.3.Final-darwin-amd64.zip&quot;&gt;Mac&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases/download/12.1.3.Final/infinispan-cli-12.1.3.Final-windows-amd64.zip&quot;&gt;Windows&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the CLI and connect to the server container:&lt;/p&gt;
&lt;div class=&quot;olist loweralpha&quot;&gt;
&lt;ol class=&quot;loweralpha&quot; type=&quot;a&quot;&gt;
&lt;li&gt;
&lt;p&gt;Linux &amp;amp; Mac: &lt;code&gt;./ispn-cli -c &lt;a href=&quot;http://127.0.0.1:11222&quot; class=&quot;bare&quot;&gt;http://127.0.0.1:11222&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows (Powershell): &lt;code&gt;&amp;amp; &quot;.\ispn-cli.exe&quot; -c &lt;a href=&quot;http://127.0.0.1:11222&quot; class=&quot;bare&quot;&gt;http://127.0.0.1:11222&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ryan Emerson</name></author><category term="docker" /><category term="cli" /><category term="containers" /><category term="quarkus" /><category term="native" /><summary type="html">Starting with Infinispan 12, we provide a natively compiled version of the Infinispan CLI.</summary></entry><entry><title type="html">Infinispan 12.1.2.Final</title><link href="https://infinispan.org/blog/2021/05/07/infinispan-12-1-2-final" rel="alternate" type="text/html" title="Infinispan 12.1.2.Final" /><published>2021-05-07T08:00:00-04:00</published><updated>2021-05-07T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/05/07/infinispan-12.1.2.Final</id><content type="html" xml:base="https://infinispan.org/blog/2021/05/07/infinispan-12-1-2-final">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s been a month since our first 12.1.0.Final release and we already released two additional minors with
some bug fixes and upgrades. The latest version is 12.1.2.Final.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Highlights of Infinispan 12.1.1 and 12.1.2 include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grafana Dashboards for the Operator &lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12702&quot;&gt;ISPN-12702&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performance regression fix &lt;a href=&quot;https://issues.redhat.com/browse/ISPN-13017&quot;&gt;ISPN-13017&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Index and Query statistics improved in the Infinispan Web Console &lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12458&quot;&gt;ISPN-12458&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Several component upgrades&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation enchancements&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find release notes for both versions at:
&lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12355542&quot;&gt;here&lt;/a&gt;
and
&lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12356461&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content><author><name>Katia Aresti</name></author><category term="release" /><summary type="html">Dear Infinispan community,</summary></entry><entry><title type="html">Infinispan 12.1.0.Final</title><link href="https://infinispan.org/blog/2021/04/07/infinispan-12-1-0-final" rel="alternate" type="text/html" title="Infinispan 12.1.0.Final" /><published>2021-04-07T08:00:00-04:00</published><updated>2021-04-07T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/04/07/infinispan-12.1.0.Final</id><content type="html" xml:base="https://infinispan.org/blog/2021/04/07/infinispan-12-1-0-final">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a belated surprise in your chocolate egg this year is a brand new final release.
Infinispan 12.1 &lt;a href=&quot;https://en.wikipedia.org/wiki/Taedonggang&quot;&gt;Taedonggang&lt;/a&gt; includes a bunch of new features and fixes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;out-of-the-box-authorization-in-the-server&quot;&gt;Out-of-the-box authorization in the server&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The biggest change is the fact that the server now enables authorization right from the start, including a set of predefined roles.
By default this only affects management ops and it can be easily disabled.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Head over to &lt;a href=&quot;https://infinispan.org/docs/stable/titles/server/server.html#authorization&quot; class=&quot;bare&quot;&gt;https://infinispan.org/docs/stable/titles/server/server.html#authorization&lt;/a&gt; for details on this feature and how to tune it to your own needs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Infinispan can now load configuration as YAML, as well as XML and JSON.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;soft-index-file-store&quot;&gt;Soft-Index File Store&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Soft-Index File Store (or SIFS for short) is one of our file-based stores, and it has received a number of improvements such as segmentation, non-blocking and requiring no additional threads.
Additionally, if you are lucky enough to have some persistent memory hardware, this file-store can support it via the very awesome &lt;a href=&quot;https://github.com/jhalliday/mashona&quot;&gt;Mashona library&lt;/a&gt;.
We hope to make this our default file-store in the future (replacing the Single File Store).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;server-protocol-management&quot;&gt;Server protocol management&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can now enable/disable protocol endpoints at runtime or use &lt;a href=&quot;https://infinispan.org/docs/stable/titles/server/server.html#endpoint_ipfilter&quot;&gt;IP filtering&lt;/a&gt; for fine-grained access control.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;console&quot;&gt;Console&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The console is now fully aware of the server authorization roles (if enabled) and many fixes are included.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cli&quot;&gt;CLI&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The CLI is now available as &lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus/releases&quot;&gt;native builds&lt;/a&gt; for Linux and MacOS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cross-site-replication&quot;&gt;Cross Site Replication&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can now enable automatic Cross Site &lt;a href=&quot;https://infinispan.org/docs/stable/titles/xsite/xsite.html#xsite_state_transfer-xsite&quot;&gt;state transfer&lt;/a&gt; for asynchronous backup strategy.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;spring&quot;&gt;Spring&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our Spring Cache and Spring Session integration now allows user keys and values to be stored in &lt;a href=&quot;https://infinispan.org/docs/stable/titles/developing/developing.html#configuring_protobuf_encoding-data&quot;&gt;Protostream&lt;/a&gt; format.
However, full integration with the Infinispan Spring Boot Starter is landing in the next minor release. Stay tuned!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;marshallingprotobuf&quot;&gt;Marshalling/ProtoBuf&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The latest ProtoStream release 4.4.0.Beta3 includes support for marshalling arrays and collections, built-in support for several community requested types (UUID, BigDEcimal,&amp;#8230;&amp;#8203;), a new method in ProtobufUtil for computing message size (without actually encoding the message) and a lot of bug fixes. This release also provides it’s own protobuf encoder and removes the dependency on protobuf-java artifact which was previously used for encoding the stream (without being exposed by the API).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We now provide an  image containing a natively compiled version of the Infinispan CLI at quay.io/infinispan/cli&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;operator&quot;&gt;Operator&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In addition to numerous fixes, the operator has added many new features. Most notably:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grafana Dashboard&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Batch CR&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom library support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom labels on Resources created by Operator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable Authentication Option&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decouple user and operator endpoint authentication&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’ve made a lot of updates to our documentation this release, with lots more task-oriented content for new features and capabilities. Server credential stores, refactored authorization (RBAC) configuration, Operator Batch CR, Backup and Restore CRs, custom code deployments, automatic cross-site state transfer, querying values, configuring Protobuf annotations for marshalling… Hopefully you’ll find all the answers you need for using Infinispan 12.1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of the big highlights for docs in this release are the new tabbed configuration snippets we’re going to start adding. Right now you can find an example of tabbed configuration in the REST API docs here: &lt;a href=&quot;https://infinispan.org/docs/dev/titles/rest/rest.html#cache_configuration&quot; class=&quot;bare&quot;&gt;https://infinispan.org/docs/dev/titles/rest/rest.html#cache_configuration&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We’ve also done a lot of housekeeping in this release to make sure configuration examples are up to date and valid. In the next release you can expect to see more improvements there as well as a new title to improve our documentation around encoding and how Infinispan uses Protobuf.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As always, thanks for reading and get in touch if you have comments, feedback, or suggestions on our documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;release-notes-and-upgrading&quot;&gt;Release notes and upgrading&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can look at the detailed &lt;a href=&quot;https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12353337E&quot;&gt;release notes&lt;/a&gt; to see what has changed since CR1.
If you are upgrading from a previous version of Infinispan, please checkout our &lt;a href=&quot;https://infinispan.org/docs/stable/titles/upgrading/upgrading.html&quot;&gt;Upgrading guide&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What&amp;#8217;s next ?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our next release, 13.0, should happen during the summer, and will hopefully introduce a new API which will make using Infinispan much easier, as well as a number of other improvements across the board. As usual, look out for blog postings about upcoming highlights. If you&amp;#8217;d like to contribute, just get in touch.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Tristan Tarrant</name></author><category term="release" /><summary type="html">Dear Infinispan community,</summary></entry><entry><title type="html">Introducing WildFly Clustering Spring Session</title><link href="https://infinispan.org/blog/2021/03/16/new-infinispan-spring-session" rel="alternate" type="text/html" title="Introducing WildFly Clustering Spring Session" /><published>2021-03-16T08:00:00-04:00</published><updated>2021-03-16T08:00:00-04:00</updated><id>https://infinispan.org/blog/2021/03/16/wildfly-clustering-spring-session</id><content type="html" xml:base="https://infinispan.org/blog/2021/03/16/new-infinispan-spring-session">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last week I released version 3.0.0.Final of wildfly-clustering-spring-session, a new Spring Session implementation based on WildFly&amp;#8217;s distributed HttpSession manager and Infinispan.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;doesnt-infinispan-already-provide-a-spring-session-implementation&quot;&gt;Doesn&amp;#8217;t Infinispan already provide a Spring Session implementation?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://infinispan.org/docs/stable/titles/integrating/integrating.html#spring_externalize_sessions&quot;&gt;Yes, it does.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Infinispan&amp;#8217;s existing Spring Session implementation stores instances of &lt;code&gt;org.springframework.session.MapSession&lt;/code&gt; into a Spring cache, which is backed by either an embedded or remote cache.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, like many &lt;code&gt;MapSession&lt;/code&gt; based &lt;code&gt;SessionRepository&lt;/code&gt; implementations, it suffers from a common set of problems/limitations:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;MapSession&lt;/code&gt; object, including all session metadata and attributes must be serialized and replicated/persisted on every request, regardless of the extent to which the session was modified.&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Because Spring Session triggers session persistence from a &lt;code&gt;ServletFilter&lt;/code&gt;, this cost is borne per request.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since each request for a given session operates on a copy of the &lt;code&gt;MapSession&lt;/code&gt;, and since the &lt;code&gt;MapSession&lt;/code&gt; is not persisted/replicated until the end of the request:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Session modifications in one requests are not visible to concurrent requests for the same session.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A given session modification can be overwritten by a previous modification of the same session from a concurrent request if that request finishes first.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Session attributes implementing &lt;code&gt;HttpSessionActivationListener&lt;/code&gt; are never notified before/after they are marshalled/unmarshalled.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;wildfly-clustering-spring-session is implemented as a Spring &lt;code&gt;SessionRepository&lt;/code&gt; facade to a container-independent &lt;code&gt;SessionManager&lt;/code&gt; implementation that persists session attributes and metadata to either an embedded Infinispan cache or a remote Infinispan server cluster via HotRod.
This grants all of the features to Spring Session that one would normally expect when deploying a distributed web application to WildFly, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Minimal persistence payloads using configurable persistence granularity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consistent view of a given session from multiple concurrent request threads on a given server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mutable session attribute semantics (emulates the semantics of local session manager)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ability to treat specific session attributes as immutable&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configurable limit for the number of active sessions to retain in memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Proper &lt;code&gt;HttpSessionActivationListener&lt;/code&gt; notifications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configurable session attribute marshaller (ProtoStream, JBoss Marshalling, or Java Serialization)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-do-i-use-it&quot;&gt;How do I use it?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this example, we&amp;#8217;ll use a remote Infinispan cluster containing a single member, deployed to the localhost, using its default configuration.
See the project &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session/blob/master/README.md&quot;&gt;README&lt;/a&gt; for details on the available configuration annotations and their attributes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Create a class containing the session repository configuration, for example:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@org.wildfly.clustering.web.spring.hotrod.annotation.EnableHotRodHttpSession \
(@HotRod(uri = &quot;hotrod://127.0.0.1:11222&quot;), manager = @SessionManager(granularity = ATTRIBUTE))
public class Config {
  // ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure your &lt;code&gt;/WEB-INF/applicationContext.xml&lt;/code&gt; will process your configuration annotation:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd&quot;&amp;gt;
  &amp;lt;context:annotation-config/&amp;gt;
&amp;lt;/beans&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an application initializer class that will auto-register the requisite servlet filters required by Spring Session:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;public class MyHttpSessionApplicationInitializer extends AbstractHttpSessionApplicationInitializer {
  public MyHttpSessionApplicationInitializer() {
    // Do not call super constructor (see project README for details)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;code&gt;@WebListener&lt;/code&gt; that bootstraps our session repository configuration:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@javax.servlet.annotation.WebListener
public class MyContextLoaderListener extends org.wildfly.clustering.web.spring.context.ContextLoaderListener {
  public MyContextLoaderListener() {
    super(Config.class);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Deploying your application will automatically create a new cache instance in the Infinispan cluster named according to the the host and context of the web application.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;can-i-use-wildfly-clustering-spring-session-outside-of-wildfly&quot;&gt;Can I use WildFly clustering Spring Session outside of WildFly?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Of course!
Like most Spring Session repository implementations, it is meant to work with any implementation of the Jakarta Servlet 4.0 specification.
The project &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session&quot;&gt;README&lt;/a&gt; contains sample instructions for installing on Tomcat.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;where-can-i-find-it&quot;&gt;Where can I find it?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can find the source code on &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session&quot;&gt;github&lt;/a&gt;.
Contributions are always welcome!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;File any issues with the &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session/issues&quot;&gt;github issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Checkout the &lt;a href=&quot;https://github.com/wildfly-clustering/wildfly-clustering-spring-session/blob/master/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Paul Ferraro&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Paul Ferraro</name></author><category term="spring" /><category term="spring session" /><category term="httpsession" /><category term="wildfly" /><summary type="html">Dear Infinispan community,</summary></entry><entry><title type="html">Infinispan 12.0.1.Final “Lockdown”</title><link href="https://infinispan.org/blog/2021/02/12/infinispan-12-0-1" rel="alternate" type="text/html" title="Infinispan 12.0.1.Final “Lockdown”" /><published>2021-02-12T07:00:00-05:00</published><updated>2021-02-12T07:00:00-05:00</updated><id>https://infinispan.org/blog/2021/02/12/infinispan-12.0.1.Final</id><content type="html" xml:base="https://infinispan.org/blog/2021/02/12/infinispan-12-0-1">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dear Infinispan community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;we hope you&amp;#8217;ve been enjoying all the new goodies included in our latest major release, Infinispan 12.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We now have a brand new micro release for you which addresses a number of issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following list shows what we have fixed:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;component-upgrade&quot;&gt;Component Upgrade&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12729&quot;&gt;ISPN-12729&lt;/a&gt; - Upgrade console to 0.13.1.Final&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;enhancement&quot;&gt;Enhancement&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12370&quot;&gt;ISPN-12370&lt;/a&gt; - Implement proper form login and digest login&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12636&quot;&gt;ISPN-12636&lt;/a&gt; - Implicit connectors for the single-port endpoint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12718&quot;&gt;ISPN-12718&lt;/a&gt; - Add addtional DEBUG logs to Backup/Restore operations&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;feature-request&quot;&gt;Feature Request&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12660&quot;&gt;ISPN-12660&lt;/a&gt; - Add property to disable test execution&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;bug&quot;&gt;Bug&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12548&quot;&gt;ISPN-12548&lt;/a&gt; - Replicated cache get ignores value in zero-capacity nodes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12651&quot;&gt;ISPN-12651&lt;/a&gt; - CacheEntryCloudEventsTest test failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12654&quot;&gt;ISPN-12654&lt;/a&gt; - Get entry broken in protobuf caches&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12658&quot;&gt;ISPN-12658&lt;/a&gt; - Fix IracWriteSkewTest test&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12659&quot;&gt;ISPN-12659&lt;/a&gt; - StatsTest random failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12661&quot;&gt;ISPN-12661&lt;/a&gt; - Licenses are not properly generated in console&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12662&quot;&gt;ISPN-12662&lt;/a&gt; - Functional commands break in replicated caches on zero-capacity nodes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12663&quot;&gt;ISPN-12663&lt;/a&gt; - LocalIndexSyncStateTransferTest random failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12666&quot;&gt;ISPN-12666&lt;/a&gt; - ReplicationIndexTest random failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12667&quot;&gt;ISPN-12667&lt;/a&gt; - GlobalState incompatibility between 11.x and 12.x&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12669&quot;&gt;ISPN-12669&lt;/a&gt; - Tests failing due to relying on published images&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12700&quot;&gt;ISPN-12700&lt;/a&gt; - CLI Batch files returns exit code 0 on error&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12709&quot;&gt;ISPN-12709&lt;/a&gt; - Cannot retrieve the keyset of a cache (ISPN000287)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12710&quot;&gt;ISPN-12710&lt;/a&gt; - IllegalArgumentException in VoidResponseCollector: Self-suppression not permitted&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12716&quot;&gt;ISPN-12716&lt;/a&gt; - Hot Rod iteration shouldn&amp;#8217;t require ADMIN permission&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12719&quot;&gt;ISPN-12719&lt;/a&gt; - When a value is json but not protobuf the console fails&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12724&quot;&gt;ISPN-12724&lt;/a&gt; - Hot Rod client has too many Elytron dependencies&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;task&quot;&gt;Task&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.redhat.com/browse/ISPN-12681&quot;&gt;ISPN-12681&lt;/a&gt; - Upgrade logo in Operator Hub&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ryan Emerson</name></author><category term="release" /><summary type="html">Dear Infinispan community,</summary></entry></feed>